from matplotlib import pylab as plt
from discreteDistributions import UniformDiscreteDistribution, BinomialDistribution, GeometricDistribution, \
    PoissonDistribution, LogarithmicDistribution

uniformSample = UniformDiscreteDistribution(1, 10, 10000)
uniformSample.kolmogorov_criterion()
plt.figure('uniform distribution f')
uniformSample.plt_distribution_function()
uniformSample.theoretical_distribution()
uniformSample.graphic_test()
uniformSample.distribution_function()
plt.figure('uniform probability')
uniformSample.probability()
uniformSample.theoretical_probability()

binomialSample = BinomialDistribution(0.5, 10, 10000)
binomialSample.kolmogorov_criterion()
binomialSample.graphic_test()
plt.figure('binom distribution f')
binomialSample.plt_distribution_function()
binomialSample.theoretical_distribution()
plt.figure('binom probability')
binomialSample.probability()
binomialSample.theoretical_probability()

geometricSample = GeometricDistribution(0.5, 10000)
geometricSample.kolmogorov_criterion()
geometricSample.graphic_test()
plt.figure('geometric distribution f')
geometricSample.plt_distribution_function()
geometricSample.theoretical_distribution()
plt.figure('geometric probability')
geometricSample.probability()
geometricSample.theoretical_probability()

poissonSample = PoissonDistribution(10, 10000)
poissonSample.kolmogorov_criterion()
poissonSample.graphic_test()
plt.figure('poisson distribution f')
poissonSample.plt_distribution_function()
poissonSample.theoretical_distribution()
plt.figure('poisson probability')
poissonSample.probability()
poissonSample.theoretical_probability()

logSample = LogarithmicDistribution(0.5, 10000)
logSample.kolmogorov_criterion()
logSample.graphic_test()
plt.figure('logarithmic distribution f')
logSample.plt_distribution_function()
logSample.theoretical_distribution()
plt.figure('logarithmic probability')
logSample.probability()
logSample.theoretical_probability()

plt.show()
